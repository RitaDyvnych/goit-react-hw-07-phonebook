{"version":3,"sources":["components/contacts.module.css","redux/operations.js","redux/selectors.js","components/Form.js","components/ContactList.js","redux/actions.js","components/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","getThunkData","createAsyncThunk","_","a","rejectWithValue","get","data","message","addThunkData","contact","post","deleteThunkData","contactId","delete","id","getContact","state","contacts","getFilteredContacts","createSelector","filter","items","el","name","toLowerCase","includes","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","inputNameId","uuidv4","inputNumberId","handleChangeInput","e","target","value","className","style","form","onSubmit","preventDefault","find","alert","htmlFor","input","autoComplete","type","pattern","title","required","onChange","btn","ContactList","filterContacts","useEffect","list","map","listItem","btnDelete","onClick","createAction","changeFilter","Filter","label","App","contactSlice","createSlice","initialState","loading","error","extraReducers","pending","action","fulfilled","payload","rejected","filterReducer","createReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f3a6c52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"contacts_title__3KfmP\",\"form\":\"contacts_form__2skxG\",\"input\":\"contacts_input__1nuNS\",\"btn\":\"contacts_btn__1JbCg\",\"btnDelete\":\"contacts_btnDelete__3diS_\",\"list\":\"contacts_list__2PGH1\",\"label\":\"contacts_label__1INRo\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = \"https://6197549daf46280017e7e535.mockapi.io\";\n\nexport const getThunkData = createAsyncThunk('getContact',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\n\nexport const addThunkData = createAsyncThunk('addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    }\n    catch (err) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\n\nexport const deleteThunkData = createAsyncThunk('deleteContact',\n  async (contactId, { rejectWithValue }) => { \n    try {\n      const { data: { id } } = await axios.delete(`/contacts/${contactId}`);\n      return id;\n     }\n    catch (err)\n    {\n     return rejectWithValue(err.message); \n    }\n  });","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContact = state => state.contacts.contact;\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = createSelector(\n    [getContact, getFilter],\n    (items, filter) =>\n        items.filter((el) =>\n            el.name.toLowerCase().includes(filter.toLowerCase()),\n        ),\n);","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addThunkData } from '../redux/operations';\nimport { getContact } from '../redux/selectors';\nimport style from \"./contacts.module.css\";\n\nexport default function Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContact);\n  const dispatch = useDispatch();\n\n  const inputNameId = uuidv4();\n  const inputNumberId = uuidv4();\n  \n  const handleChangeInput = (e) => {\n   if (e.target.name === 'name') {\n      setName(e.target.value);\n    } else if (e.target.name === 'number') {\n      setNumber(e.target.value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addThunkData({ name, number, inputNameId }));\n      setName(\"\");\n      setNumber(\"\");\n    }\n  };\n\n  return (\n      <>\n        <form\n          className={style.form}\n          onSubmit={handleSubmit}\n        >\n          <label htmlFor={inputNameId}>Name</label>\n          <input\n          className={style.input}\n            id={inputNameId}\n            value={name}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChangeInput}\n          />\n          <label htmlFor={inputNumberId}>Number</label>\n          <input\n            className={style.input}\n          value={number}\n          id={inputNumberId}\n            autoComplete=\"off\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChangeInput}\n          />\n          <button type=\"submit\" className={style.btn}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n\n}\n","import React, { useEffect } from \"react\";\nimport style from \"./contacts.module.css\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getThunkData, deleteThunkData } from '../redux/operations';\nimport { getFilteredContacts } from '../redux/selectors';\n\n\nexport default function ContactList() {\n\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(getFilteredContacts);\n\n  useEffect(() => dispatch(getThunkData(), [dispatch]));\n\n  return (\n      <ul className={style.list}>\n      {filterContacts.map((el) => (\n          <li className={style.listItem} key={el.id}>\n            {el.name}: {el.number}\n            <button\n              type=\"button\"\n              className={style.btnDelete}\n              id={el.id}\n              onClick={()=>dispatch(deleteThunkData(el.id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n}","import { createAction } from '@reduxjs/toolkit';\n\nexport const contactSubmit = createAction('contactSubmit');\nexport const changeFilter = createAction('changeFilter');\nexport const contactDelete = createAction('contactDelete');","import React from \"react\";\nimport style from \"./contacts.module.css\";\nimport { changeFilter } from '../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts } from '../redux/selectors';\n\nexport default function Filter() {\n  \n  // const filter = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n      <>\n        <label htmlFor=\"find\" className={style.label}>\n          Find contacts by name\n        </label>\n      <input\n        className={style.input}\n        autoComplete=\"off\"\n        id=\"find\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]\"\n        onChange={(e) => {\n          e.preventDefault();\n          dispatch(changeFilter(e.target.value.toLowerCase()));\n        }}\n        ></input>\n      </>\n    );\n}\n","import \"./App.css\";\nimport style from \"./components/contacts.module.css\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nexport default function App() {\n  return (\n      <div className=\"App\">\n        <h1 className={style.title}>Phonebook</h1>\n        <Form />\n        <h2 className={style.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n}\n","import { createReducer, createSlice } from '@reduxjs/toolkit';\nimport { changeFilter } from './actions';\nimport { getThunkData, addThunkData, deleteThunkData } from './operations';\n\nconst contactSlice = createSlice({\n  name: 'phonebook',\n  initialState: {\n    contact: [],\n    loading: false,\n    error: null,\n  },\n  extraReducers: {\n    [getThunkData.pending]: (state, action) => ({\n        ...state,\n        loading: true,\n    }),\n    [getThunkData.fulfilled]: (state, action) => ({\n        ...state,\n        contact: action.payload,\n        loading: false,\n    }),\n    [getThunkData.rejected]: (state, action) => ({\n        ...state,\n        loading: false,\n        error: action.payload,\n    }),\n    [addThunkData.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n    [addThunkData.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        contact: [...state.contact, action.payload],\n        loading: false,\n      };\n    },\n    [addThunkData.rejected]: (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    },\n    [deleteThunkData.pending]: (state, action) => ({\n        ...state,\n        loading: true,\n    }),\n    [deleteThunkData.fulfilled]: (state, action) => ({\n      ...state,\n      contact: state.contact.filter(({ id }) => id !== action.payload),\n      loading: false,\n    }),\n    [deleteThunkData.rejected]: (state, action) => ({\n        ...state,\n        loading: false,\n        error: action.payload,\n    }),\n  }\n});\nexport default contactSlice.reducer;\n\nexport const filterReducer = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\n// function filterContact(state = {}, action) {\n//   return { ...state, filter: action.payload };\n// }\n// function addContact(state = {}, action) {\n \n//   if (!state.contacts.find((el) => el.name === action.payload[0])) {\n//     const data = [...state.contacts, { name: action.payload[0], number: action.payload[1], id: uuidv4() }];\n//     localStorage.setItem('contacts', JSON.stringify(data));\n//     return { ...state, contacts: data };\n//     } else {\n//     alert(`${action.payload[0]} is already in contacts`);\n//     return state;\n//     }\n// }\n\n\n\n// function deleteContact(state = {}, action) {\n//   const data = state.contacts.filter((elem) => elem.id !== action.payload);\n//   localStorage.setItem('contacts', JSON.stringify(data));\n//   return { ...state, contacts: data };\n// }\n\n// export const reducer = createReducer({}, {\n//   [contactSubmit]: addContact,\n//   [changeFilter]: filterContact,\n//   [contactDelete]: deleteContact,\n// })","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactSlice, { filterReducer } from './reducers';\n\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactSlice,\n    filter: filterReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}